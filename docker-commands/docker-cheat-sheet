#docker build a image from docker file
docker build .

#docker build with an argument
docker build --build-arg variable=argument

# remove all containers, images and networks
docker system prune

#list all containers
docker container ls -a
docker container ls -aq
docker container ls -a -s

#list only active containers
docker ps

#list all containers
docker ps -a

#remove container
docker container rm container-id|container-name

#remove existed containers
docker rm $(docker ps -q -f "status=exited")

#remove all containers
docker rm -f $(docker ps-aq)

#remove all stopped containers
docker container prune
docker container rm $(docker container ls -aq)
docker rm $(docker ps -q -f "status=exited")

#stop a container
docker container stop container-id|container-name

#stop all containers
docker container stop $(docker container ls -aq)

#kill all running containers
docker container kill $(docker ps -q)

#docker list images
docker image ls

#docker remove images
docker image rm IMAGE_ID
docker image prune

#container
docker container inspect container-id|container-name
docker container stop container-id|container-name
docker container kill container-id|container-name

#interactive container
docker container run -i -t --rm ubuntu

#docker run container in detached
docker run -dit ubuntu

#detached container
docker container run -d my_image

#attach to a container
docker attach container-id|container-name

#run a command in a container
docker exec -it 15cf92d2a9f6 echo "test"

#docker ps
docker ps -a | less -S

#get container ip
docker inspect --format '{{.NetworkSettings.IPAddress}}' <containerId>